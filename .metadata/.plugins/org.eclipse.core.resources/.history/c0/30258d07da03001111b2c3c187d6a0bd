package com.bsiag.smartfield.server.services.custom.lucene.indexwriter;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;

import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.SimpleFSDirectory;
import org.apache.lucene.util.Version;
import org.eclipse.scout.commons.BundleContextUtility;
import org.eclipse.scout.commons.IOUtility;
import org.eclipse.scout.rt.shared.services.common.file.RemoteFile;
import org.eclipse.scout.service.AbstractService;

import com.bsiag.smartfield.shared.services.custom.lucene.indexwriter.IIndexWriterService;

public class IndexWriterService extends AbstractService implements IIndexWriterService {

  public void createZipIndex(RemoteFile file) {
    try {
      String path = BundleContextUtility.resolve("${workspace_loc}/com.bsiag.smartfield.server/resources/index");
      IOUtility.deleteDirectory(path);
      Directory index = new SimpleFSDirectory(new File(path));
      IndexWriterConfig config = new IndexWriterConfig(Version.LUCENE_34, new StandardAnalyzer(Version.LUCENE_34));

      IndexWriter w;
      w = new IndexWriter(index, config);

      BufferedReader reader = new BufferedReader(file.getDecompressedReader());
      String line;
      while ((line = reader.readLine()) != null) {
        if (line.length() > 264) {
          w.addDocument(createDocoment(line.substring(147, 154), line.substring(155, 194), line.substring(260, 264)));
        }
      }

      w.close();

    }
    catch (Exception e) {
      e.printStackTrace();
    }
  }

  private Document createDocoment(String key, String zip, String city) throws IOException {
    Document doc = new Document();
    doc.add(new Field("key", zip, Field.Store.YES, Field.Index.ANALYZED));
    doc.add(new Field("zip", zip, Field.Store.YES, Field.Index.ANALYZED));
    doc.add(new Field("city", city, Field.Store.YES, Field.Index.ANALYZED));
    return doc;
  }
}
